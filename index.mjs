import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-uint32-max@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-exp@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var v=f,b=j,y=g,x=.00991256303526217;var w=function(e,t){var s,n,r;for(n=b(-.5*t*t),(s=[]).push(x/n),s.push(t),r=2;r<e;r++)s[r]=v(-2*y(x/s[r-1]+n)),n=b(-.5*s[r]*s[r]);return s.push(0),s};var L=function(e){var t,s;for(t=[],s=0;s<e.length-1;s++)t.push(e[s+1]/e[s]);return t},E=g;var N=c,O=j,T=L,q=function(e,t,s){var n,r;do{n=E(e())/t,r=E(e())}while(-2*r<n*n);return s?n-t:t-n},z=w(128,3.442619855899),A=T(z);var M=function(e,t){return function(){var s,n,r,i,o,d,a;for(;;){if(o=2*e()-1,d=127&t(),N(o)<A[d])return o*z[d];if(0===d)return q(e,3.442619855899,o<0);if(i=o*z[d],r=i*i,a=d+1,s=O(-.5*(z[d]*z[d]-r)),(n=O(-.5*(z[a]*z[a]-r)))+e()*(s-n)<1)return i}}},P=e,G=t,J=s,R=n,S=r,k=i.isPrimitive,U=o,V=d,B=a.factory,C=m,D=l,F=p,H=u,I=h,K=M;var Q=function(e){var t,s,n,r;if(r={copy:!0},arguments.length){if(!S(e))throw new TypeError("invalid argument. Must provide an object. Value: `"+e+"`.");if(U(e,"copy")&&(r.copy=e.copy,!k(e.copy)))throw new TypeError("invalid option. `copy` option must be a boolean. Option: `"+e.copy+"`.");if(U(e,"prng")){if(!R(e.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+e.prng+"`.");t=e.prng}else if(U(e,"state")){if(r.state=e.state,!V(e.state))throw new TypeError("invalid option. `state` option must be a Uint32Array. Option: `"+e.state+"`.")}else if(U(e,"seed")&&(r.seed=e.seed,void 0===e.seed))throw new TypeError("invalid option. `seed` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `"+e.seed+"`.")}return void 0===r.state?void 0===t?t=(s=B(r)).normalized:(s=B({seed:F(1+H*t()),copy:r.copy}),r.seed=null):t=(s=B(r)).normalized,n=K(t,s),P(n,"NAME","improved-ziggurat"),null===r.seed?(P(n,"seed",null),P(n,"seedLength",null)):(G(n,"seed",i),G(n,"seedLength",o)),e&&e.prng?(J(n,"state",C(null),D),P(n,"stateLength",null),P(n,"byteLength",null),P(n,"toJSON",C(null))):(J(n,"state",m,l),G(n,"stateLength",d),G(n,"byteLength",a),P(n,"toJSON",p)),P(n,"PRNG",t),n;function i(){return s.seed}function o(){return s.seedLength}function d(){return s.stateLength}function a(){return s.byteLength}function m(){return s.state}function l(e){s.state=e}function p(){var e={type:"PRNG"};return e.name=n.NAME,e.state=I(s.state),e.params=[],e}},W=Q();e(W,"factory",Q);var X=W;export{X as default};
